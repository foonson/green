

/bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"

echo "export PATH=/opt/homebrew/bin:$PATH" >> ~/.bash_profile && source ~/.bash_profile
echo "export PATH=/opt/homebrew/bin:$PATH" >> ~/.zshrc

brew search sdl

brew install sdl2 sdl2_image

/opt/homebrew/bin/brew install boost --without-python

brew info boost

/opt/homebrew/Cellar/sdl2/2.0.14_1/include/SDL2
/opt/homebrew/Cellar/sdl2/2.0.14_1/lib

SDL_VERSION=2.0.14_1
export SDL_VERSION=2.30.7
export SDL_IMAGE_VERSION=2.8.2_1
export BOOST_VERSION=1.86.0

/opt/homebrew/Cellar/sdl2/$SDL_VERSION/include/SDL2
/opt/homebrew/Cellar/sdl2/$SDL_VERSION/lib
/opt/homebrew/Cellar/boost/$BOOST_VERSION


config xcode Build Settings --> All --> Search Paths --> Header Serch Paths
--> /usr/local/include
config Xcode General ->add Frameworks and Libraries --> libSDL2-2.0.0.dylib


g++  -I/usr/include/SDL2/ -I./tetris/ -I/opt/homebrew/Cellar/sdl2/2.0.14_1/include/ tetris.cpp --std=c++17 -L/opt/homebrew/Cellar/sdl2/2.0.14_1/lib/   -lSDL2
g++ -I/usr/include/SDL2/ -I. -I./tetris/ -I/opt/homebrew/Cellar/sdl2/$SDL_VERSION/include/SDL2/ -I/opt/homebrew/Cellar/sdl2_image/$SDL_IMAGE_VERSION/include/SDL2/  -I/opt/homebrew/Cellar/boost/$BOOST_VERSION/include/ tetris/tetris.cpp --std=c++17 -L/opt/homebrew/Cellar/sdl2/$SDL_VERSION/lib/ -L/opt/homebrew/Cellar/sdl2_image/$SDL_IMAGE_VERSION/lib/ -lSDL2 -lSDL2_image

.zshrc

Target path
Go to File -> Project settings
Click the Advanced button
Click Done, then Done once more.

Install - snapd

  sudo apt update
  sudo apt install snapd
  sudo snap install snap-store

Install - VSCode

  sudo snap install code --classic
  download .deb

Install - c-lang

  sudo apt install clang

Install - Bazel

  sudo apt install bazel-bootstrap

  bazel build //test:test

Install - cmake

  sudo apt install cmake

Install - gtest
  sudo apt install libgtest-dev
  cd /usr/src/googletest
  sudo cmake CMakeLists.txt
  sudo make
  sudo make install

Install - DOxygen
  sudo apt install doxygen

  doxygen -g
  doxygen Doxyfile
  python3 -m http.server 8000

Install - cppcheck

  sudo apt install cppcheck

  cppcheck --enable=all
  cppcheck --list-checks

Install - boost

  sudo apt install libboost-all-dev

Install - SDL

  sudo apt install libsdl2-dev
  sudo apt install libsdl2-image-dev

  sdl2-config  --libs
  pkg-config --cflags --libs sdl2

GIT

  git clone https://github.com/foonson/green.git

Linux - Isolate CPU

  sudo vim /etc/default/grub
  GRUB_CMDLINE_LINUX_DEFAULT="isolcpus=2,3"
  sudo update-grub

  ps -eo psr,cmd

  taskset 0x4 ./test.o

Linux - coredump
  ulimit -c unlimited
  /var/crash
  /var/lib/apport/coredump/

  readelf -s main.o  # read symbol table
  strip # remove debug symbol from binary
  readelf --sections --wide y.x
  readelf --debug-dump
  readelf -a strip.x  | grep Build

  strings a.out | grep debug
  https://www.tweag.io/blog/2023-11-23-debug-fission/
  

Linux - default compiler

  update-alternatives --display c++

Bazel

  bazel clean
  bazel query --output=build //test:main
  bazel build --strip=never

hotkey - ubuntu

  terminal switch tab - hotkey - ctrl-page-up/down

hotkey - Visual Studio code 

  switch file - hotkey - ctrl P
  switch file - hotkey - ctrl-page-up/down
